title: Accessing a TCP server using Skupper
subtitle: Securely connect to a TCP server on a remote Kubernetes cluster
overview: |
  This example shows you how you can use Skupper to connect a TCP
  client on one Kubernetes cluster to a TCP server on another.
sites:
  public:
    title: Public
    platform: kubernetes
    namespace: public
    env:
      KUBECONFIG: ~/.kube/config-public
  private:
    title: Private
    platform: kubernetes
    namespace: private
    env:
      KUBECONFIG: ~/.kube/config-private
steps:
  - standard: install_the_skupper_command_line_tool
  - standard: kubernetes/set_up_your_namespaces
  - title: Deploy the TCP server
    preamble: |
      In Private, use `kubectl create deployment` to deploy the TCP
      server.
    commands:
      private:
        - run: kubectl create deployment tcp-server --image quay.io/skupper/tcp-example-server
          output: deployment.apps/tcp-server created
  - standard: kubernetes/create_your_sites
  - standard: kubernetes/link_your_sites
  - title: Expose the TCP server
    preamble: |
      In Private, use `skupper expose` to expose the TCP server on all
      linked sites.
    commands:
      private:
        - await_resource: deployment/tcp-server
        - run: skupper expose deployment/tcp-server --port 9090
          output: deployment tcp-server exposed as tcp-server
  - title: Run the TCP client
    preamble: |
      In Public, use `kubectl run` to run the TCP client.  Here we
      send "hello" and get "HELLO" echoed back from the server.
    commands:
      public:
        - await_resource: service/tcp-server
        - run: echo "hello" | kubectl run tcp-client --stdin --rm --image=quay.io/skupper/tcp-example-client --restart=Never -- tcp-server 9090
          output: |
            tcp-server-54c997c697-7ql7r: HELLO
            pod "tcp-client" deleted
  - standard: cleaning_up
    commands:
      public:
        - run: skupper delete
      private:
        - run: skupper delete
        - run: kubectl delete deployment/tcp-server
